#!/usr/bin/env ruby
# vim: endofline binary

# This requires the following gems:
#
#       hpricot
#       fastercsv
#       rubyzip
#

require 'rubygems'
require 'hpricot'
require 'fastercsv'
require 'zip/zipfilesystem'
require 'tempfile'
require 'fileutils'

Hpricot::ElementContent['office:forms'] = :EMPTY
Hpricot::ElementContent['table:table-column'] = :EMPTY
Hpricot::ElementContent['text:tab'] = :EMPTY
Hpricot::ElementContent['text:p'] = :EMPTY

module ODSXML
end

ODSXML::BASEDOCPREFIX = <<'EOF'
<?xml version="1.0" encoding="UTF-8"?>
<office:document-content xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:style="urn:oasis:names:tc:opendocument:xmlns:style:1.0" xmlns:text="urn:oasis:names:tc:opendocument:xmlns:text:1.0" xmlns:table="urn:oasis:names:tc:opendocument:xmlns:table:1.0" xmlns:draw="urn:oasis:names:tc:opendocument:xmlns:drawing:1.0" xmlns:fo="urn:oasis:names:tc:opendocument:xmlns:xsl-fo-compatible:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:number="urn:oasis:names:tc:opendocument:xmlns:datastyle:1.0" xmlns:presentation="urn:oasis:names:tc:opendocument:xmlns:presentation:1.0" xmlns:svg="urn:oasis:names:tc:opendocument:xmlns:svg-compatible:1.0" xmlns:chart="urn:oasis:names:tc:opendocument:xmlns:chart:1.0" xmlns:dr3d="urn:oasis:names:tc:opendocument:xmlns:dr3d:1.0" xmlns:math="http://www.w3.org/1998/Math/MathML" xmlns:form="urn:oasis:names:tc:opendocument:xmlns:form:1.0" xmlns:script="urn:oasis:names:tc:opendocument:xmlns:script:1.0" xmlns:ooo="http://openoffice.org/2004/office" xmlns:ooow="http://openoffice.org/2004/writer" xmlns:oooc="http://openoffice.org/2004/calc" xmlns:dom="http://www.w3.org/2001/xml-events" xmlns:xforms="http://www.w3.org/2002/xforms" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:rpt="http://openoffice.org/2005/report" xmlns:of="urn:oasis:names:tc:opendocument:xmlns:of:1.2" xmlns:rdfa="http://docs.oasis-open.org/opendocument/meta/rdfa#" xmlns:field="urn:openoffice:names:experimental:ooo-ms-interop:xmlns:field:1.0" office:version="1.2">
	<office:scripts/>
	<office:font-face-decls>
		<style:font-face style:name="Arial" svg:font-family="Arial" style:font-family-generic="swiss" style:font-pitch="variable"/>
		<style:font-face style:name="Arial Unicode MS" svg:font-family="&apos;Arial Unicode MS&apos;" style:font-family-generic="system" style:font-pitch="variable"/>
		<style:font-face style:name="Tahoma" svg:font-family="Tahoma" style:font-family-generic="system" style:font-pitch="variable"/>
	</office:font-face-decls>
	<office:automatic-styles>
		<style:style style:name="co1" style:family="table-column">
			<style:table-column-properties fo:break-before="auto" style:column-width="0.8925in"/>
		</style:style>
		<style:style style:name="ro1" style:family="table-row">
			<style:table-row-properties style:row-height="0.1681in" fo:break-before="auto" style:use-optimal-row-height="true"/>
		</style:style>
		<style:style style:name="ro2" style:family="table-row">
			<style:table-row-properties style:row-height="0.3283in" fo:break-before="auto" style:use-optimal-row-height="true"/>
		</style:style>
		<style:style style:name="ta1" style:family="table" style:master-page-name="Default">
			<style:table-properties table:display="true" style:writing-mode="lr-tb"/>
		</style:style>
		<style:style style:name="ta_extref" style:family="table">
			<style:table-properties table:display="false"/>
		</style:style>
	</office:automatic-styles>
	<office:body>
		<office:spreadsheet>
EOF
ODSXML::BASEDOCSUFFIX = <<'EOF'
		</office:spreadsheet>
	</office:body>
</office:document-content>
EOF
#ODSXML::BASEDOC = ODSXML::BASEDOCPREFIX + ODSXML::BASEDOCSUFFIX

module ODSXML
  #def base_doc
  #  Hpricot.XML(BASEDOC)
  #end

  def elem(tag, attrs={})
    e = Hpricot::Elem.new(Hpricot::STag.new(tag))
    attrs.each { |k,v|
      e.set_attribute(k, v)
    }
    e
  end

  EntityReplacements = {
    '&' => '&amp;',
    '<' => '&lt;',
    '>' => '&gt;',
    '"' => '&quot;',
    "'" => '&apos;'
  }

  def buildcell(value, type=nil)
    type ||= 'string'
    cell = elem('table:table-cell',
                'office:value-type' => type)
    text = elem('text:p')
    cell.children.push text
    if (value.empty? rescue true)
      text = elem('text:p')
      cell.children.push text
      6.times { text.children.push elem('text:tab') }
    else
      value = value.gsub(/[#{EntityReplacements.keys.join}]/) { |m|
        EntityReplacements[m]
      }
      text.children.push Hpricot::Text.new(value)
    end
    cell
  end

  def buildrow(fields, types=nil, style=nil)
    style ||= fields.any? { |f| f.empty? rescue true } ? 'ro2' : 'ro1'
    types ||= []
    row = elem('table:table-row',
               'table:style-name' => style)
    row.children.push *fields.zip(types).map { |value,type|
      buildcell(value, type)
    }
    fixup = make_fixup_list(row.children) { |e1,e2|
			e1.to_plain_text == e2.to_plain_text
		}
		do_fixup(row.children, fixup) { |e,count|
      e.set_attribute('table:number-columns-repeated', count.to_s)
			e
		}
    row
  end

	ColumnStyleAttr = 'table:style-name'
	ColumnCellStyleAttr = 'table:default-cell-style-name'

  def buildcolumn(style=nil, cell_style=nil)
    style ||= 'co1'
    cell_style ||= 'Default'
		elem('table:table-column',
				 ColumnStyleAttr => style,
				 ColumnCellStyleAttr => cell_style)
  end

  def make_fixup_list(elements)
    fail "No block given" unless block_given?
    latest = nil
    fixup = []
    elements.each_with_index { |e,i|
      if latest && yield(e, latest.last)
        if fixup.last && fixup.last.first == latest.first
          fixup[-1][-1] += 1
        else
          fixup << [ latest.first, 2 ]
        end
      else
        latest = [i, e]
      end
    }
    fixup
  end

	def do_fixup(elements, fixup)
    fixup.reverse.each do |index,count|
			e = elements[index]
			elements[index,count] = block_given? ? yield(e, count) : e
		end
		elements
	end

  # Known extra variable keys:
  #   :style -- table style, defaults to 'Default'
  #   :types -- parallel array to rows with cell types, defaults to []
  #   :column_styles -- column styles, defaults to []
  #   :row_styles -- row styles, defaults to []
  def buildtable(name, rows, extra={})
    extra = {
      :style => 'ta1',
      :types => [],
      :column_styles => [],
      :row_styles => []
    }.merge!(extra)
    table = elem('table:table',
                 'table:name' => name,
                 'table:style-name' => extra[:style],
                 'table:print' => 'false')
    first_row_style = extra[:row_styles].first || []
    table.children << elem('office:forms',
                           'form:automatic-focus' => 'false',
                           'form:apply-design-mode' => 'false')
    zipped = rows.first.zip(extra[:column_styles],
                            first_row_style)
    columns = zipped.map { |col,style,cell_style|
      buildcolumn(style, cell_style)
    }
    fixup = make_fixup_list(columns) { |e1,e2|
			(e1[ColumnStyleAttr] == e2[ColumnStyleAttr]) &&
				(e1[ColumnCellStyleAttr] == e2[ColumnCellStyleAttr])
    }
		do_fixup(columns, fixup) { |e,count|
			e.set_attribute('table:number-columns-repeated', count.to_s)
			e
		}
    table.children.push *columns
    zipped = rows.zip(extra[:row_styles], extra[:types])
    table.children.push *zipped.map { |row,styles,types|
      buildrow(row, types, styles)
    }
    table
  end

  def xml_postprocess(xml)
    txt = xml.to_html
    txt.gsub!(/\s+\/>/, '/>')
    txt.gsub!(/\s{2,}/, ' ')
    txt.gsub!(/>\s*</, ">\n<")
    txt
  end

  def make_content_data_from_csv(*files)
    dbranges = elem('table:database-ranges')
    tables = files.map { |file|
      csv = FasterCSV.read file
      sheet = file.dup
      sheet.sub!(/\.csv$/, '')
      sheet.sub!(/_out$/, '')
      lastcol = (2..csv.first.size).inject('A') { |col,waste| col.succ } + '1'
      range = "#{sheet}.A1:#{sheet}.#{lastcol}"
      dbranges.children << elem('table:database-range',
                                'table:name' => sheet+'_headers',
                                'table:target-range-address' => range,
                                'table:display-filter-buttons' => "true")
      xml_postprocess buildtable(sheet, csv)
    }
    tables.unshift BASEDOCPREFIX
    tables << xml_postprocess(dbranges)
    tables << BASEDOCSUFFIX
    tables.join("\n")
  end

  extend self
end

if __FILE__ == $0
  outputfile = nil
  if ARGV.first == '-o'
    ARGV.shift
    outputfile = ARGV.shift
  end
  if ARGV.empty?
    STDERR.puts "Usage: #{$0} [-o output.ods] <CSV files...>"
    exit 1
  end
  content = ODSXML.make_content_data_from_csv(*ARGV)
  out = Tempfile.new("combineCSV")
  out.print DATA.read
  out.flush
  out.close
  Zip::ZipFile.open(out.path) { |zip|
    zip.file.open('content.xml', 'w') do |f|
      f.puts content
    end
  }
  if outputfile
    FileUtils.cp(out.path, outputfile)
  else
    print File.read(out.path)
  end
  out.unlink
end

__END__
PK    ¨¶Ú:Öl9ä.   .      mimetypeapplication/vnd.oasis.opendocument.spreadsheetPK    ¨¶Ú:               Configurations2/statusbar/PK  ¨¶Ú:            '   Configurations2/accelerator/current.xml PK           PK    ¨¶Ú:               Configurations2/floater/PK    ¨¶Ú:               Configurations2/popupmenu/PK    ¨¶Ú:               Configurations2/progressbar/PK    ¨¶Ú:               Configurations2/menubar/PK    ¨¶Ú:               Configurations2/toolbar/PK    ¨¶Ú:               Configurations2/images/Bitmaps/PK  ¨¶Ú:            
   styles.xml›Ymèú6˛ﬁ_Å∏*J§≤¿ﬁÎnn˜T©™˙°WEIÓ¯¿∞Våçl≥/˘ıÏÖˆh“*M/R.åüyÒ3cœ@Óˆı∂XH¬Ÿ ègëÔañî∞|Â?}¸=∏Û÷?›Û,#	^¶<©
ÃT ’ÅbÈÅ2ìÀzqÂWÇ-9íD.*∞\™d…KÃ¨“≤ç^Wµƒõ™n¿mmÖ˜j™≤∆vt—Ûtœ‹÷N⁄MU÷X‡¥≠ûÒ© {IÉå	/J§»I{JÿßïøQ™\Ü·n∑õÌ.g\‰aºX,B≥ÍNÆ¨5®4	1≈⁄ô„YZlÅöü∆∂CbUÒå≈djêBΩ¨ñKÄ¿vu]N3‘÷È‘◊6ü\]€|ÑÊdÉƒ‰:3‡n©\¶”KÂ2mÎHmFÚ{>¬¢˘ÎÒœc]âb™/çÌPïRNﬁfçnÎsŒ]®Z°>Ï&‹y]ÖısΩ;ﬂ	¢∞h¡ì≥—ƒ1Œã!“ áÄVóºEΩÈQÀ◊°¿% íMøÏÄùπÛíf»π§úÅV4æ⁄B}™B≠r·{Õ•Ÿ∫®Á˛⁄ﬁ á9C	RúPπæØOì{ı≥ésÂˇ*¢æÖn°á£º≠™WÇ3,/wD ¢$*Å“‹"–Ö„‚á\{Oå@¡ﬁ„áÅ(^°íÀ∑ß¿Zz>∏ÉT∏¯ñË>¢/–@Ln·[Ωác˘j‰uSµQ¶8CmZ≠µ‹ÑdZQê`J}?äÇR@	E†A[S	),Pp*W˛¸»Eâ *7}-∞Œy§D*ƒtáèf◊Ñïu;ÌÎôÌuä-„KäX^°dòA¬+¶ÏÂÈÉ™¿©@l∞`–≥∏œ˚Ω]jÃ⁄∆Óõ◊7<≈˚”‘:≥n}¿∞[3¶uV“µæØ[`”	;9¨ô˘+ÚO@^ÛT¶pz)…âÇÑ≈∆—ÄMg#©ÑÄ¡Ì0‰*éÆﬁEv[N°πÈ©Gâ
˚≈3ß6önﬁ,∂ïªıœ.∞#˚Î„˘ù€’\™4c©	ºEHwÔS)Ò«™ÿ'Â0ø\dY?⁄WcSc◊ÅÛl`k
T∫"g)©GÆ-¢~˝ÊUÆﬁÆ\Ò†≤§üAß∏Œd£÷ÏÁ‡∑˙¿¯„W[8Æ¸ÀÛ∫ûªﬁ‹ÎJ–ı{&˝Ê¶hﬁJàBî$÷ûW,≈Êjl1íSíé@v$’„™A4≈fúö˚.Ü&˘&®Ö¥u◊º¿lMŒ¸´ÿÈ´GÛ^∫œÂÂåÙ´„?ìò3ÕPâ…Y y%to àª´aZ√Hì	GÅ}¢ø–ÛÄÚ£—ïüÄ"Lû£≠ŒU	˘æ„õR˘cïÛm…lçøäRõé)î
^ø9p_ÈQ?»dRiuq√[
IÇÓSÍfJ—ÅW™≥ß«≤à˝P?(˝ 
 V>Åz>Êdª;6¬é,„“wí0};nö$D≥˘‚˙ñ‘≥HÅDkgz•+æ+}ÊJÈåh-ÓÆÍô(è™	Á{D
‹`ò›ê¬^.&‰p˛?À°^{Ê"’ü.@xyuCògÓvÔ"2?R¢¥˛<òË6∂ä(˘§,KÌÖ~ëD˙è#©ÖÄˆù„^…Ù6¸c‘‘ó∂ók<Ω¡öÖIgB&#‘ñŒç4ÌS1pÒ’·ØÔÕG…≤˘-7◊Ëı√√√}x*l$Â		'†si[8ë0'zM∞Ê∆yß˜“<Ë∞Îan[-Y/k™C˙Ÿ¬è/Q˚æ˘ sÜŸyèY;‰∫≠ÈÄ˛&ŸﬁÎßà¢mH˝¸¶GD«SGdŒ—âwÆËú”õfá9?äAtƒw˛:∫„;˝mj—D°ÅÎ_<0Dﬂ,Ø/óÛ+ÙP˘t„˚n5ÂÖm†y;Z/m`-˚ój/>Ì·{¨ø PK Øíú´  6  PK    ¨¶Ú:"î<S  S     meta.xml<?xml version="1.0" encoding="UTF-8"?>
<office:document-meta xmlns:office="urn:oasis:names:tc:opendocument:xmlns:office:1.0" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:meta="urn:oasis:names:tc:opendocument:xmlns:meta:1.0" xmlns:ooo="http://openoffice.org/2004/office" office:version="1.2"><office:meta><meta:initial-creator>G S</meta:initial-creator><meta:creation-date>2009-07-18T16:52:20</meta:creation-date><dc:date>2009-07-18T16:53:24</dc:date><dc:creator>G S</dc:creator><meta:editing-duration>PT00H01M08S</meta:editing-duration><meta:editing-cycles>1</meta:editing-cycles><meta:document-statistic meta:table-count="1" meta:cell-count="0" meta:object-count="0"/><meta:generator>OpenOffice.org/3.1$Unix OpenOffice.org_project/310m11$Build-9399</meta:generator></office:meta></office:document-meta>PK  ¨¶Ú:               Thumbnails/thumbnail.pngÎsÁÂí‚b``‡ıÙp	“{8ÿÄ,N3A¶}û.é!sﬁ^2ddP‡9`–˜sªMÃÅã.é˝Áﬁ…≠òqüÒ√§áûÜ6ömÍG?,ëò'rxrREè◊®‡®‡Ä1^[»ˆ/Í‡â2`ÇftısYÁî– PK—ˇA{   ˜  PK  ¨¶Ú:               settings.xmlÌôKs⁄0ÄÔ˝åÔƒ@m<Å°ìÜ6m3ò§èõ∞–D÷z$á¸˙ 6Ó◊Nê/mNñÙÌzµ⁄á|ˆ˛>`≠Ië˜≠ÓA«j˜–ß|—∑n¶Ìw÷˚¡õ3úœ©éè^ Wm	JÈ)≤•ósÈd√}+‹A"©t8	@: s0û/s∂g;©∞Ï…=£¸Æo-ï
€é„¯ ><@±∞ªßßßv:öOıêœÈ¢Æ®lˆ∂(D¸#(Yê)ì
Îu:Gvˆﬂjmî‹2Mœ‰v»_p∂ê˝¥©Ç ±MkÛ8Q≠oiëŒäB¸«jVŸ∫«kn©§3Cdä°ï™u®)W÷†sfˇy¯
Ê™ÚwÍ´e∫◊;~∑7˝ËbY™˘QÔ∏.Ωê∞Mπ˜‡%A\æEÈÌ\b]G_à«~AI©Ñﬁkêv_§i-Ë9%⁄œ)˙xâªP›Ó7äÑDqçí*Ì˝?z…cÚœ2rmÀ<&_¢†»an»®˙Ç>ÕøD±áÉP‘{ñﬁ3¢}n ìÁs[ˇß¯;⁄Ë)∫Çî>!|a÷<πæÜcVéùTEî=πfcwN=G•00∏uøÉ©¶=/	Ùñ∞®HÕÌÏj≤Ä$|>I?©Äó<‹éÈU√i≠{ “∞\˜≥¯ªwÄ26#¢:Õæ›cœ˛GxÓ.1NúÎr„ÓZ@Ræ¯3DÑ[É9avÛ¶˙À*JD{ø¢j
˝Q–bÖcÄúPG»P–ì#‘ÌùÍ*Úƒ¿æ6`ïK"µÍQ¿'_Òu˜–àê4êËH” },øEJw\‡ÆÉ2ÈB11‚rNqB§Ç‚Fõ8Yx,7mCc& ı~W…›ù#q_^)Ôâw£ôOWTV™on≤ÃÀ?ºß“]so)ê”ÿ!ÌXlö∆Ú	∫≈Ø)ê=àI6¯%∑Øy„ÀWîﬂ›Ñ>QP›Xæ¶§◊îÙöí˛ÈîÙú§a§pDò1*Ã„Øuõ™ﬂ„´˛Sﬁ¡⁄µ˙åF≈ªèëprtN9Î:®a≤ıçÒÅ(b˛mGK"àßua
êâ[o~«Ú3>îîÎà{*"%◊nFzI≤Ç€Ïk≈7>b(õà0Yé∫L!õq¬!c:Ÿ&^Ù	g#¬=`$\$˛DgC‰l›Äù∆Ú√ÊCî´ù¨:<!¢≤∫¥ˇ˙eW}û¸PKö2ƒî  ‡  PK  ¨¶Ú:               META-INF/manifest.xmlµïAn√ E˜9Ö≈ﬁ¶Õ™≤‚Dj•û =¿è$à¢‰ˆ≈ëí∏mT5ïŸÅÖﬂ˚å=∞⁄S0êv∂œ’ì(–*◊j€7‚c˚^æàÕz±¿ÍâÎÀ†HÔY∫NÉ≠ê¶⁄¬ÄT≥™ùG€:¥\]_è¶ı¢∏Å;m∞L√©∏…∞’PÚ…c#¿{£p )∂≠ŒÆj™®»Ññˆà,nê…Êñì«]4¶Ù¿˚FH!ärüÚÊlß˚Œi)âÅ#Ì ‰¡ÉRh0M]ê*Ü0 ’8ª+ã†33¡ΩÛ—ß$f¬◊§|_zåûŒŒôlp=@è$_5‡)´„Aˆ˜”Ñ¢ªßä∫RS¡ﬂ2<(g<≤{ı.<˘˘Õ¸;ó¯dêf«»0€¡≥›«agAí|Vﬁˆs√Á-,2ßÎÚZ⁄ï¸q[Æ?PKAT˚CI  h  PK     ¨¶Ú:Öl9ä.   .                    mimetypePK     ¨¶Ú:                         T   Configurations2/statusbar/PK   ¨¶Ú:           '             å   Configurations2/accelerator/current.xmlPK     ¨¶Ú:                         „   Configurations2/floater/PK     ¨¶Ú:                           Configurations2/popupmenu/PK     ¨¶Ú:                         Q  Configurations2/progressbar/PK     ¨¶Ú:                         ã  Configurations2/menubar/PK     ¨¶Ú:                         ¡  Configurations2/toolbar/PK     ¨¶Ú:                         ˜  Configurations2/images/Bitmaps/PK   ¨¶Ú: Øíú´  6  
             4  styles.xmlPK     ¨¶Ú:"î<S  S                 meta.xmlPK   ¨¶Ú:—ˇA{   ˜               ê  Thumbnails/thumbnail.pngPK   ¨¶Ú:ö2ƒî  ‡               Q  settings.xmlPK   ¨¶Ú:AT˚CI  h                 META-INF/manifest.xmlPK      µ  ´    